**NOTAS DEL CURSO DE GIT*******

git init            --> inicializa .git en el directorio
git add _name_      --> archivo en estado staying = area de preparación
git commit -m"Soy el primer commit"
git show            --> Muestra el ultimo, y penultimo commit
git log             --> Muestra todos los commit hechos con sus ids

 
Ramas: dividir el código como doctor strange al saltar en lineas temporales

**CÓMO VOLVER EN EL TIEMPO***
CODE: git log 
    Elegir el commit a volver, copiar su id 
git reset xxxxxxxxxxxxxxxxxxxxxxxxxx_id --soft --- STAYING SIGUE DISPONIBLE
git reset xxxxxxxxxxxxxxxxxxxxxxxxxx_id --hard -- TODO VUELVE A LA VERSION ANTERIOR

--------------------

git status          --> Verificar archivos trackeados, no agregados o modificados


git diff            --> Compara cambios finales con el anterior
git add 

git checkout xxxxxxxxxxxxxxxxx_id nombreArchivo --> Volver a una versión anterior sobre tu archivo 
git checkout master  --> Volver a la versión final

git rm
Este comando nos ayuda a eliminar archivos de Git sin eliminar su historial del sistema de versiones.

git reset
Este comando nos ayuda a volver en el tiempo. Pero no como git checkout que nos deja ir, mirar, pasear y volver. Con git reset volvemos al pasado sin la posibilidad de volver al futuro. Borramos la historia y la debemos sobreescribir. No hay vuelta atrás.

**FLUJO DE TRABAJO** // 14
Directorio de Trabajo ---> git add 
Preparación o Stagin  ---> git commit
Repositorio Local     ---> git clone url 
Repositorio Remote     ---> gitHub 

Local a Remote ---> git push
Remote a Local ---> git fetch > git merge = git pull


***RAMAS*** // 15
Primero ver donde estas con git status y git show 
Luego 
git branch cabecera

Moverse entre ramas
git checkout cabecera 
Los cambios que realice en cabecera no se veran en el master
Así se genera otra linea temporal 

**FUSION DE RAMAS CON GIT MERGE** // 16
Trabajando en diferentes ramas, se puede modificar codigo del header sin afectar body

git merge es un commit a la rama donde haces la fusión
En este caso git merge cabecera en la rama master
git branch para saber en que rama estas



